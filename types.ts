/**
 * @file types.ts
 * @description This file contains all the core TypeScript type definitions and interfaces
 * used across the Femmora application. Centralizing these types helps ensure data
 * consistency and provides a single source of truth for the application's data models.
 */

// --- Core Data Models ---

/**
 * Represents a user in the application.
 */
export interface User {
  id: string;
  name: string;
  email: string;
  profilePictureUrl?: string; // Optional URL for the user's avatar
  // Add other relevant user fields
}

/**
 * Represents a single educational resource item.
 */
export interface EducationalResource {
  id: string;
  title: string;
  description: string;
  type: 'article' | 'video' | 'course_link';
  url: string;
  tags: string[];
  language: string;
}

/**
 * Represents a skill development course.
 */
export interface SkillCourse {
  id: string;
  title: string;
  description: string;
  provider: string; // e.g., Coursera, Udemy
  duration: string;
  difficulty: 'Beginner' | 'Intermediate' | 'Advanced';
  icon?: string; // e.g., a Font Awesome class name
  url: string;
}

/**
 * Represents a financial literacy tool.
 */
export interface FinancialTool {
  id: string;
  name: string;
  description: string;
  type: 'budget_planner' | 'savings_calculator' | 'investment_guide';
  link?: string; // Link to an external tool or an internal application page
}

/**
 * Represents a government scheme or benefit.
 */
export interface GovernmentScheme {
  id: string;
  name: string;
  description: string;
  eligibility: string;
  applicationLink: string;
  category: string; // e.g., Education, Health, Employment
}

/**
 * Represents a job opportunity listing.
 */
export interface JobOpportunity {
  id:string;
  title: string;
  company: string;
  location: string;
  description: string;
  requirements: string[];
  applyLink: string;
  postedDate: string;
}

// Mentor interface removed
// export interface Mentor {
//   id: string;
//   name: string;
//   expertise: string[];
//   bio: string;
//   availability: string;
//   imageUrl?: string;
// }

/**
 * Represents a post in the community forum.
 */
export interface ForumPost {
  id: string;
  title: string;
  content: string;
  author: User;
  createdAt: string;
  repliesCount: number;
  tags: string[];
}

/**
 * Represents a reply to a forum post.
 */
export interface ForumReply {
  id: string;
  postId: string;
  content: string;
  author: User;
  createdAt: string;
}

// ProgressMetric and AchievementBadge removed

/**
 * Represents an emergency contact number.
 */
export interface EmergencyContact {
  id: string;
  name: string;
  phoneNumber: string;
  type: 'Police' | 'Ambulance' | 'Women Helpline' | 'Child Helpline' | 'NGO Support';
}

/**
 * Represents a scholarship or grant opportunity.
 */
export interface ScholarshipGrant {
  id: string;
  name: string;
  description: string;
  provider: string;
  eligibility: string;
  amount: string;
  deadline: string;
  applicationLink: string;
}

/**
 * Represents a health and wellness resource.
 */
export interface HealthWellnessResource {
  id: string;
  title: string;
  description: string;
  type: 'article' | 'video' | 'helpline' | 'exercise_routine';
  link?: string;
  category: 'Mental Health' | 'Physical Health' | 'Nutrition';
}

// SuccessStory interface removed
// SuccessStoryVideo interface removed


/**
 * Enum for supported languages in the application.
 */
export enum Language {
  EN = 'en', // English
  HI = 'hi', // Hindi
  TA = 'ta', // Tamil
  // Add other regional languages as needed
  // e.g., TE = 'te' (Telugu)
}

/**
 * Defines the structure for UI text translations.
 * It's a dictionary where each key maps to an object containing translations
 * for each supported language.
 */
export interface Translations {
  [key: string]: {
    [lang in Language]: string;
  };
}

// --- New Interfaces for Comprehensive Guidance Pathway (Smart Pathway Feature) ---

/**
 * Represents a single resource within a pathway step.
 */
export interface PathwayStepResource {
  name: string;
  type?: string; // e.g., 'Video', 'Website', 'Book'
  url?: string; // A direct link to the resource
}

/**
 * Represents a single step in the educational/career pathway.
 */
export interface PathwayStep {
  stepTitle: string;
  dos: string[]; // List of things to do
  donts: string[]; // List of things to avoid
  resources: PathwayStepResource[];
  tip: string; // A motivational or practical tip
}

/**
 * Represents the entire educational pathway module generated by the AI.
 */
export interface EducationalPathwayModule {
  steps: PathwayStep[];
}

// LearningResourceItem removed as per user request to remove the module

/**
 * Represents a single point of guidance in the life awareness module.
 */
export interface LifeAwarenessGuidancePoint {
  point: string;
  visualCue?: string; // Textual description of a suggested image
}

/**
 * Represents a topic within the life awareness module.
 */
export interface LifeAwarenessTopic {
  topicTitle: string;
  guidancePoints: LifeAwarenessGuidancePoint[];
  audioTip?: string; // A short, empathetic audio message suggestion
}

/**
 * Represents the entire life awareness module generated by the AI.
 */
export interface LifeAwarenessModule {
  ageGroupFocus: string;
  topics: LifeAwarenessTopic[];
}

/**
 * Represents a single item for a government scheme or a legal right.
 */
export interface SchemeOrRightItem {
  emoji?: string;
  type: string; // e.g., 'Scholarship', 'Scheme', 'Right'
  name: string;
  details: string;
  howToAccess: string;
  source?: string; // The official source of the information
  url?: string; // An extracted URL from howToAccess or source
}

/**
 * Represents a tip for learning how to use a digital application.
 */
export interface DigitalLearningTip {
  app: string; // e.g., 'YouTube', 'Chrome', 'WhatsApp'
  howToUse: string; // Can be a multi-line, step-by-step guide
  exampleSearchOrTask: string;
  visualCue?: string; // Textual description of a suggested image/icon
  audioTip?: string; // A short, encouraging audio message suggestion
}

/**
 * Represents the motivational support part of the generated guidance.
 */
export interface MotivationalSupportModule {
  personalizedEncouragement?: string;
  quote: string;
  nextStep: string; // A clear, immediate next action for the user
  reminder: string;
}

/**
 * Represents the complete, structured guidance object parsed from the AI's response.
 */
export interface GeneratedGuidance {
  educationalPathway?: EducationalPathwayModule;
  // learningResources removed
  lifeAwarenessModule?: LifeAwarenessModule;
  schemesAndRights?: SchemeOrRightItem[];
  digitalLearningTips?: DigitalLearningTip[];
  motivationalSupport?: MotivationalSupportModule;
  rawResponse?: string; // For debugging or if parsing fails for some parts
}

// --- Interface for Chat Functionality ---
/**
 * Represents a single message in a chat session.
 */
export interface ChatMessage {
  sender: 'user' | 'ai';
  text: string;
  timestamp?: Date;
}

// --- Interface for "Learn to Use Apps" Feature ---
/**
 * Represents a structured recommendation for a digital app or website.
 */
export interface AppRecommendation {
  id: string; // Unique ID for React key prop
  name: string;
  usage: string;
  howToUseVideoLink?: string;
  howToUseText?: string;
  officialLink: string;
  benefits: string[];
  safetyTips?: string[];
  rawResponse?: string; // For debugging
}

// --- Interface for "Women Awareness" Feature ---
/**
 * Represents a single awareness point tailored to a user's age.
 */
export interface AwarenessPoint {
  id: string; // Unique ID for React key prop
  emoji: string;
  awarenessText: string;
  imageSuggestion: string; // Textual description of a suggested image
  rawResponse?: string; // For debugging
}

// --- Interfaces for Brain Quizzes Game ---
/**
 * Represents a single answer option in a quiz question.
 */
export interface QuizAnswerOption {
  text: string;
  isCorrect: boolean;
}

/**
 * Represents a single quiz question.
 */
export interface QuizQuestion {
  id: string;
  questionText: string;
  options: QuizAnswerOption[];
  category?: string;
  difficulty?: 'easy' | 'medium' | 'hard';
  explanation?: string; // Explanation shown after the user answers
}

// --- Interfaces for Women Law Awareness ---
/**
 * Represents the multilingual content for a detail section of a law.
 */
export interface LawDetailContent {
  [Language.EN]: string;
  [Language.HI]: string;
  [Language.TA]: string;
}

/**
 * Represents a single law concerning women's rights in India.
 */
export interface WomenLaw {
  id: string;
  lawNameKey: string; // Key for UI_TEXT to get the translated Law Name
  fullForm: LawDetailContent;
  applicability: LawDetailContent;
  crimesCovered: LawDetailContent;
  victimRights: LawDetailContent;
  punishmentPenalty: LawDetailContent;
  realLifeExample: LawDetailContent;
}